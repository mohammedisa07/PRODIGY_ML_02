import numpy as np
import pandas as pd
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
np.random.seed(42)
num_customers = 200
purchase_amounts = np.random.uniform(10, 200, num_customers)
purchase_frequencies = np.random.randint(1, 10, num_customers)
customer_data = pd.DataFrame({'PurchaseAmount': purchase_amounts, 'PurchaseFrequency': purchase_frequencies})

plt.scatter(customer_data['PurchaseAmount'], customer_data['PurchaseFrequency'])
plt.xlabel('Purchase Amount')
plt.ylabel('Purchase Frequency')
plt.title('Customer Purchase Data')
plt.show()
k = 3  # You can adjust the number of clusters based on your requirements
kmeans = KMeans(n_clusters=k, random_state=42)
customer_data['Cluster'] = kmeans.fit_predict(customer_data)
colors = ['red', 'green', 'blue']
for cluster in range(k):
    cluster_data = customer_data[customer_data['Cluster'] == cluster]
    plt.scatter(cluster_data['PurchaseAmount'], cluster_data['PurchaseFrequency'], c=colors[cluster], label=f'Cluster {cluster + 1}')

plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], marker='X', s=200, c='black', label='Centroids')
plt.xlabel('Purchase Amount')
plt.ylabel('Purchase Frequency')
plt.title('Customer Clusters')
plt.legend()
plt.show()
